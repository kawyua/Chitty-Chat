var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.796,1,1.105]],["body/components/AppComponent.html",[0,1.052,1,1.617,2,1.721,3,0.273,4,0.231,5,1.314,6,1.314,7,1.314,8,1.314,9,0.231,10,1.765,11,1.721,12,2.052,13,1.161,14,2.876,15,2.259,16,1.369,17,1.95,18,3.813,19,1.95,20,3.199,21,0.319,22,1.1,23,1.632,24,2.157,25,2.324,26,3.121,27,4.505,28,0.986,29,2.571,30,2.571,31,0.665,32,1.95,33,2.27,34,2.09,35,1.727,36,1.506,37,3.199,38,0.665,39,0.043,40,1.052,41,0.665,42,0.595,43,1.314,44,2.157,45,0.986,46,1.369,47,2.157,48,2.157,49,1.389,50,2.052,51,2.052,52,2.157,53,2.571,54,1.451,55,2.157,56,0.817,57,0.418,58,1.507,59,1.765,60,1.033,61,0.273,62,0.472,63,1.161,64,1.765,65,1.507,66,1.765,67,1.765,68,1.765,69,2.157,70,1.765,71,3.199,72,3.199,73,3.199,74,4.218,75,3.199,76,3.199,77,2.618,78,2.618,79,3.199,80,3.199,81,2.618,82,2.618,83,2.618,84,3.199,85,2.052,86,2.618,87,2.157,88,1.507,89,2.235,90,1.507,91,1.161,92,2.235,93,1.507,94,1.507,95,1.765,96,1.765,97,2.157,98,2.618,99,1.765,100,2.157,101,2.157,102,2.157,103,2.157,104,1.765,105,2.157,106,1.033,107,1.95,108,1.95,109,1.314,110,2.571,111,1.314,112,1.314,113,0.742,114,1.314,115,0.827,116,1.314,117,0.827,118,1.314,119,1.314,120,0.015,121,0.023,122,0.015]],["title/modules/AppModule.html",[123,1.551,124,1.757]],["body/modules/AppModule.html",[1,2.099,3,0.306,4,0.258,9,0.258,15,1.154,34,2.1,39,0.043,53,2.478,54,1.529,56,1.091,57,0.467,58,1.685,60,1.154,61,0.306,62,0.528,106,1.154,113,1.688,115,1.882,117,1.882,120,0.017,121,0.025,122,0.017,123,1.867,124,3.511,125,1.154,126,1.469,127,3.327,128,3.327,129,3.327,130,2.115,131,1.973,132,1.973,133,1.973,134,1.973,135,1.973,136,2.837,137,2.641,138,2.84,139,1.973,140,1.469,141,1.685,142,2.425,143,4.065,144,2.84,145,1.685,146,2.425,147,2.411,148,2.411,149,1.973,150,4.065,151,2.411,152,2.84,153,1.685,154,3.47,155,2.411,156,2.411,157,2.411,158,1.973,159,3.47,160,3.47,161,1.685,162,2.411,163,1.685,164,2.411,165,2.411,166,1.154,167,1.685,168,1.973,169,1.973,170,1.973,171,1.973,172,1.973,173,1.973,174,1.973,175,1.973,176,1.973,177,1.973,178,1.973,179,1.973,180,1.973,181,1.973,182,1.973,183,1.973,184,2.411]],["title/modules/AppRoutingModule.html",[123,1.551,136,1.551]],["body/modules/AppRoutingModule.html",[0,1.07,3,0.491,4,0.415,9,0.415,39,0.043,56,1.043,57,0.75,61,0.491,62,0.849,113,1.639,120,0.028,121,0.034,122,0.028,125,1.855,130,2.362,136,2.565,142,2.708,146,3.331,149,3.171,166,1.855,185,3.875,186,3.875,187,3.607,188,4.766,189,2.362,190,2.905,191,3.875,192,3.875,193,3.171,194,3.171,195,3.875]],["title/guards/AuthGuard.html",[190,1.757,196,2.015]],["body/guards/AuthGuard.html",[3,0.392,4,0.331,9,0.331,11,1.662,16,1.322,21,0.456,24,1.973,28,1.271,31,0.952,35,1.897,36,1.271,38,1.271,39,0.043,40,1.137,41,0.609,42,1.137,45,0.952,56,0.998,57,0.598,61,0.392,62,0.676,63,1.662,120,0.022,121,0.03,122,0.022,189,1.882,190,2.512,194,4.218,197,3.088,198,2.528,199,2.158,200,4.43,201,3.088,202,3.088,203,4.947,204,4.637,205,4.947,206,3.088,207,4.121,208,2.22,209,4.121,210,4.121,211,4.637,212,1.015,213,1.479,214,2.528,215,3.088,216,2.158,217,2.528,218,1.662,219,1.479,220,1.662,221,1.479,222,3.088,223,3.088,224,3.088,225,1.184,226,3.088,227,3.088,228,3.088,229,3.088]],["title/injectables/AuthService.html",[35,1.105,212,0.71]],["body/injectables/AuthService.html",[3,0.314,4,0.265,9,0.265,16,1.06,21,0.366,22,1.216,24,1.186,28,1.091,31,1.091,33,2.423,35,1.356,36,1.468,38,1.091,39,0.043,40,0.976,41,0.522,42,0.976,45,1.272,56,1.009,57,0.479,60,1.186,61,0.314,62,0.542,63,2.665,85,1.333,120,0.018,121,0.025,122,0.018,140,1.509,161,1.73,166,2.155,189,1.509,200,4.172,208,1.976,212,0.871,213,1.186,218,1.333,219,1.186,221,2.155,225,1.955,230,1.186,231,2.027,232,4.952,233,4.502,234,4.502,235,3.537,236,2.476,237,3.684,238,4.127,239,3.537,240,2.895,241,2.476,242,2.476,243,3.537,244,2.476,245,2.027,246,2.476,247,3.537,248,2.027,249,2.476,250,2.476,251,2.476,252,3.537,253,2.476,254,2.476,255,1.509,256,2.895,257,2.476,258,2.476,259,2.476,260,2.476,261,1.333,262,2.476,263,2.476,264,3.537,265,2.476,266,2.476,267,2.476,268,2.472,269,2.476,270,2.476,271,2.476,272,1.186,273,1.73,274,2.476,275,2.027,276,2.027,277,1.73,278,2.476,279,1.509,280,2.476,281,2.027,282,2.476,283,2.476,284,2.476,285,2.027,286,2.476,287,2.476]],["title/interfaces/Chat.html",[54,0.991,288,0.991]],["body/interfaces/Chat.html",[3,0.451,4,0.381,9,0.381,21,0.526,22,1.555,39,0.042,41,0.861,49,1.852,54,1.555,61,0.451,91,2.812,120,0.026,121,0.032,122,0.026,225,2.004,272,2.502,288,1.225,289,1.916,290,2.914,291,4.277,292,4.277]],["title/injectables/ChatService.html",[34,1.234,212,0.71]],["body/injectables/ChatService.html",[3,0.394,4,0.332,9,0.332,12,1.671,16,1.329,21,0.459,22,1.422,23,2.272,25,3.237,28,1.275,30,2.52,31,1.434,34,1.77,36,1.592,38,0.957,39,0.043,40,0.857,41,0.459,42,0.857,45,0.957,46,1.329,49,0.957,50,2.225,51,2.225,56,0.9,57,0.601,61,0.394,62,0.68,63,2.858,65,3.249,120,0.022,121,0.03,122,0.022,208,1.486,212,1.019,213,1.486,219,1.486,221,1.486,230,1.486,293,2.541,294,4.649,295,4.649,296,4.135,297,3.384,298,3.104,299,3.104,300,4.135,301,3.104,302,3.104,303,2.541,304,2.541,305,3.104,306,3.104,307,3.104,308,3.104,309,3.104,310,3.104,311,3.104]],["title/components/ChatboxComponent.html",[0,0.796,113,0.991]],["body/components/ChatboxComponent.html",[0,0.527,1,0.308,2,0.764,3,0.102,4,0.086,5,0.489,6,0.489,7,0.489,8,0.489,9,0.086,11,0.764,12,1.029,13,0.432,14,1.78,15,1.398,17,0.866,19,0.866,21,0.39,22,0.488,23,0.818,24,1.265,25,2.16,26,2.162,28,0.438,29,1.408,30,0.866,31,0.438,34,1.25,35,1.013,36,1.504,38,0.901,39,0.044,40,1.322,41,0.737,42,0.806,45,1.093,46,1.517,49,1.462,50,1.993,51,1.993,54,0.657,56,0.873,57,0.155,58,0.561,59,0.657,61,0.102,62,0.176,63,1.422,64,0.657,65,0.561,66,1.564,67,0.657,68,0.657,70,1.162,78,1.162,85,0.432,88,1.336,89,1.615,90,0.561,91,0.432,92,1.846,93,1.615,94,0.993,95,0.657,96,0.657,98,2.39,99,1.891,104,1.564,106,0.384,107,0.866,108,0.866,109,0.489,110,1.408,111,0.489,112,0.489,113,0.795,114,0.489,115,0.308,116,0.489,117,0.308,118,0.489,119,0.489,120,0.01,121,0.01,122,0.006,161,0.561,166,1.398,193,1.162,208,0.384,213,0.384,218,0.432,221,0.384,225,0.733,237,1.891,240,1.564,245,0.657,248,0.657,255,2.824,261,0.432,279,1.165,297,1.162,312,0.657,313,1.911,314,1.42,315,1.911,316,2.31,317,1.911,318,1.911,319,1.911,320,1.911,321,1.911,322,1.911,323,1.911,324,4.634,325,1.42,326,2.31,327,2.31,328,1.42,329,1.42,330,1.42,331,2.31,332,1.42,333,2.31,334,0.802,335,1.925,336,1.925,337,1.925,338,0.802,339,0.802,340,1.42,341,0.802,342,0.802,343,0.802,344,0.802,345,1.42,346,2.921,347,0.802,348,1.42,349,0.802,350,0.802,351,1.42,352,0.802,353,0.802,354,0.802,355,1.911,356,0.802,357,0.802,358,1.42,359,2.921,360,1.42,361,1.42,362,0.802,363,3.03,364,1.42,365,2.31,366,0.802,367,1.42,368,1.42,369,1.162,370,1.42,371,1.42,372,2.31,373,1.42,374,1.42,375,1.42,376,1.42,377,0.802,378,0.802,379,0.802,380,0.802,381,1.42,382,0.802,383,0.802,384,0.561,385,1.42,386,1.42,387,1.42,388,1.42,389,4.275,390,1.615,391,0.993,392,1.42,393,1.42,394,0.802,395,0.802,396,0.802,397,1.911,398,0.802,399,0.802,400,0.802,401,1.162,402,0.802,403,0.802,404,0.802,405,0.802,406,0.802,407,0.802,408,0.802,409,0.802,410,0.802,411,0.802,412,0.561,413,0.489,414,0.802,415,1.42,416,1.911,417,1.42,418,1.42,419,1.42,420,1.42,421,1.42,422,1.42,423,0.802,424,0.802,425,0.802,426,0.802,427,0.802,428,0.802,429,0.802,430,0.802,431,1.42,432,0.802,433,1.42,434,0.802,435,1.42,436,0.802,437,0.802,438,1.42,439,0.802,440,0.802,441,0.802,442,0.802,443,0.802,444,0.802,445,0.802,446,0.802,447,0.802,448,0.802,449,0.802,450,1.42,451,0.802,452,0.802,453,0.802,454,0.802,455,1.911,456,1.42,457,1.911,458,0.802,459,0.802,460,1.42,461,0.802,462,1.42,463,1.42,464,0.657,465,0.561,466,0.802,467,0.802,468,0.802,469,0.802,470,0.802,471,1.336,472,0.802,473,0.802,474,0.802,475,0.802,476,0.802,477,0.802,478,0.802,479,2.921,480,1.42,481,1.42,482,1.42,483,1.42,484,1.911,485,1.42,486,1.42,487,1.162,488,1.42,489,1.42,490,1.42,491,1.42,492,1.42,493,2.31,494,0.802,495,1.911,496,1.911,497,0.802,498,0.802,499,1.42,500,2.901,501,1.911,502,3.159,503,0.802,504,0.802,505,0.802,506,1.42,507,1.42,508,1.42,509,1.162,510,0.802,511,1.42,512,3.159,513,1.42,514,2.921,515,0.802,516,0.802,517,1.42,518,0.802,519,1.42,520,0.802,521,1.162,522,1.162,523,0.802,524,0.802,525,0.802,526,1.911,527,0.802,528,0.802,529,1.42,530,1.42,531,1.42,532,0.802,533,1.42,534,0.802]],["title/interfaces/Chatroom.html",[288,0.991,535,2.015]],["body/interfaces/Chatroom.html",[3,0.471,4,0.398,9,0.398,21,0.549,22,1.597,39,0.042,41,0.807,49,1.808,54,1.825,56,0.72,61,0.471,120,0.027,121,0.033,122,0.027,272,2.541,288,1.278,289,2,390,3.709,535,3.246,536,3.042,537,5.307,538,5.307,539,4.343,540,3.717]],["title/injectables/ChatroomService.html",[212,0.71,337,1.757]],["body/injectables/ChatroomService.html",[3,0.293,4,0.247,9,0.247,16,0.987,21,0.341,23,2.323,28,1.037,31,0.712,32,1.406,33,2.345,36,1.428,38,1.343,39,0.043,40,1.203,41,0.643,42,1.203,43,2.049,45,1.343,46,0.987,49,1.745,56,0.844,57,0.447,60,1.105,61,0.293,62,0.505,120,0.017,121,0.024,122,0.017,166,2.315,208,1.899,212,0.828,213,1.105,216,1.613,217,1.889,218,1.242,219,1.105,220,1.242,221,2.389,230,1.105,255,2.946,261,1.242,268,3.378,337,2.049,390,1.613,465,1.613,471,1.613,539,3.566,541,1.889,542,3.362,543,3.362,544,4.357,545,3.362,546,2.308,547,3.362,548,4.357,549,4.357,550,2.308,551,3.966,552,3.362,553,2.308,554,2.308,555,2.308,556,3.362,557,2.308,558,2.308,559,2.751,560,2.751,561,2.751,562,2.751,563,2.308,564,2.308,565,2.308,566,2.751,567,2.308,568,1.889,569,1.889,570,1.889,571,2.308,572,2.308,573,2.308,574,2.308,575,2.308,576,1.889,577,2.308,578,2.308,579,2.308,580,2.308,581,2.308,582,2.308,583,2.308,584,2.308,585,2.308,586,2.308,587,2.308]],["title/interfaces/Chatuser.html",[288,0.991,413,1.757]],["body/interfaces/Chatuser.html",[3,0.479,4,0.404,9,0.404,21,0.558,22,1.613,39,0.041,41,0.811,49,1.831,61,0.479,120,0.027,121,0.034,122,0.027,272,2.555,273,3.73,277,3.73,279,3.253,288,1.299,289,2.032,413,2.859,464,4.368,588,3.091]],["title/components/HeaderComponent.html",[0,0.796,115,1.105]],["body/components/HeaderComponent.html",[0,1.244,1,1.12,2,2.136,3,0.37,4,0.313,5,1.78,6,1.78,7,1.78,8,1.78,9,0.313,11,2.136,12,2.426,13,1.572,14,3.18,15,2.498,17,2.419,19,2.419,21,0.431,24,1.9,28,1.224,29,2.948,31,0.901,35,1.855,36,1.224,38,0.901,39,0.043,40,1.244,41,0.431,42,0.806,45,0.901,46,1.25,56,0.768,57,0.566,61,0.37,62,0.64,85,1.572,88,2.041,89,2.041,90,2.041,91,1.572,92,2.774,93,2.041,94,2.041,106,1.399,107,2.419,108,2.419,109,1.78,110,2.948,111,1.78,112,1.78,113,1.005,114,1.78,115,1.855,116,1.78,117,1.12,118,1.78,119,1.78,120,0.021,121,0.029,122,0.021,199,2.041,220,1.572,487,3.248,509,3.248,521,2.391,522,2.391,589,2.391,590,4.508,591,3.969,592,2.921,593,2.921,594,2.921,595,3.969,596,3.969,597,3.969,598,3.969,599,3.969,600,3.969,601,2.921]],["title/components/LoginComponent.html",[0,0.796,117,1.105]],["body/components/LoginComponent.html",[0,1.232,1,1.098,2,2.108,3,0.363,4,0.307,5,1.746,6,1.746,7,1.746,8,1.746,9,0.307,11,2.108,12,2.402,13,1.542,14,3.161,15,2.483,17,2.387,19,2.387,21,0.423,22,1.347,23,1.676,24,2.297,28,1.208,29,2.924,31,0.883,35,1.926,36,1.376,38,0.883,39,0.043,40,1.232,41,0.578,42,0.791,45,0.883,46,1.226,56,0.758,57,0.555,61,0.363,62,0.627,85,2.582,86,3.205,106,1.372,107,2.387,108,2.387,109,1.746,110,2.924,111,1.746,112,1.746,113,0.985,114,1.746,115,1.098,116,1.746,117,1.84,118,1.746,119,1.746,120,0.021,121,0.028,122,0.021,199,2.002,214,2.345,256,3.205,272,1.875,276,3.205,602,2.345,603,4.463,604,3.917,605,2.865,606,2.865,607,2.865,608,2.865,609,4.797,610,2.865,611,3.205,612,3.917,613,3.917,614,2.865]],["title/modules/MaterialModule.html",[123,1.551,137,1.551]],["body/modules/MaterialModule.html",[3,0.386,4,0.325,9,0.325,39,0.042,56,0.891,57,0.589,61,0.386,62,0.666,120,0.022,121,0.029,122,0.022,125,1.456,130,1.853,137,2.195,142,2.125,146,2.85,152,3.766,153,2.125,615,3.041,616,3.041,617,4.601,618,4.601,619,4.601,620,4.601,621,4.601,622,4.601,623,4.601,624,4.601,625,4.601,626,4.601,627,4.601,628,4.601,629,4.601,630,5.128,631,4.601,632,4.601,633,4.601,634,4.601,635,4.601,636,4.601,637,4.601,638,4.601,639,4.601,640,4.601,641,4.601,642,4.601,643,4.601,644,4.601,645,4.601,646,4.601,647,4.601,648,2.489,649,4.601]],["title/injectables/MessageService.html",[212,0.71,335,1.757]],["body/injectables/MessageService.html",[3,0.396,4,0.334,9,0.334,16,1.336,21,0.461,23,1.995,25,1.902,28,1.279,30,2.841,31,0.962,32,1.902,33,2.674,36,1.279,38,1.279,39,0.042,40,1.145,41,0.613,42,1.145,43,2.529,45,0.962,46,1.776,49,1.764,50,1.68,51,1.68,56,0.803,57,0.604,60,1.494,61,0.396,62,0.684,91,2.862,120,0.022,121,0.03,122,0.022,212,1.022,219,1.494,220,1.68,225,1.197,230,1.494,291,3.396,292,2.554,335,2.529,391,3.615,465,3.615,471,3.258,566,2.554,568,2.554,569,2.554,570,2.554,576,2.554,650,2.554,651,3.121,652,3.121,653,5.318,654,3.121,655,4.149,656,3.121,657,3.121,658,3.121,659,3.121]],["title/interfaces/User.html",[225,1.105,288,0.991]],["body/interfaces/User.html",[3,0.445,4,0.375,9,0.375,21,0.518,22,1.54,39,0.042,41,0.824,42,1.515,49,1.841,61,0.445,120,0.025,121,0.032,122,0.025,225,1.717,272,2.488,273,3.632,275,4.253,277,3.632,279,3.167,281,4.253,288,1.207,289,1.888,660,2.871,661,5.197]],["title/injectables/UserInfoService.html",[212,0.71,336,1.757]],["body/injectables/UserInfoService.html",[3,0.391,4,0.33,9,0.33,13,1.658,16,1.318,21,0.455,23,2.267,28,1.268,31,0.95,32,1.877,33,2.66,36,1.428,38,1.268,39,0.043,40,1.135,41,0.608,42,1.135,43,2.507,45,1.268,49,1.428,56,0.897,57,0.596,60,1.475,61,0.391,62,0.675,120,0.022,121,0.03,122,0.022,166,1.97,208,1.475,212,1.013,216,2.153,218,1.658,219,1.475,220,1.658,221,2.366,230,1.475,255,2.823,268,3.236,336,2.507,384,2.153,391,2.153,559,2.521,560,2.521,561,2.521,562,2.521,662,4.045,663,2.521,664,4.113,665,4.942,666,3.08,667,4.113,668,3.08,669,3.08,670,3.367,671,3.08,672,4.631,673,3.08,674,3.08,675,3.08,676,3.08]],["title/coverage.html",[677,3.219]],["body/coverage.html",[0,1.39,1,1.239,9,0.346,10,2.645,34,1.383,35,1.239,39,0.042,41,0.477,54,1.111,82,2.645,113,1.111,115,1.239,117,1.239,120,0.023,121,0.03,122,0.023,141,2.258,163,2.967,167,2.258,190,1.969,196,2.258,198,2.645,212,1.289,225,1.239,231,2.645,261,1.739,288,1.732,290,2.645,293,2.645,312,2.645,335,1.969,336,1.969,337,1.969,413,1.969,500,4.807,535,2.258,536,2.645,541,2.645,588,2.645,589,2.645,602,2.645,650,2.645,660,2.645,662,2.645,663,2.645,677,2.645,678,3.231,679,3.231,680,4.246,681,4.742,682,4.742,683,4.742,684,3.231,685,4.246,686,3.231,687,5.232,688,2.645,689,2.645,690,3.231,691,3.231]],["title/dependencies.html",[126,2.113,692,2.408]],["body/dependencies.html",[39,0.043,57,0.717,120,0.027,121,0.033,122,0.027,126,2.259,144,3.794,145,3.24,153,2.59,158,3.033,189,2.259,213,1.774,303,3.033,304,3.033,401,3.033,412,2.59,648,3.033,693,3.706,694,3.706,695,3.706,696,4.636,697,3.706,698,5.649,699,3.706,700,3.706,701,3.706,702,3.706,703,3.706,704,3.706,705,3.706,706,3.706,707,3.706,708,3.706,709,3.706,710,3.706,711,3.706,712,3.706,713,3.706,714,3.706,715,3.706]],["title/index.html",[21,0.356,611,1.971,716,2.408]],["body/index.html",[0,1.33,4,0.358,15,1.599,39,0.031,40,0.922,53,2.036,54,1.492,77,3.944,81,3.944,83,3.944,120,0.024,121,0.031,122,0.024,140,2.036,261,1.798,670,3.944,717,3.34,718,3.34,719,3.34,720,3.34,721,3.34,722,3.34,723,4.339,724,3.34,725,3.34,726,3.34,727,3.34,728,4.339,729,5.288,730,5.517,731,3.34,732,3.34,733,3.34,734,3.34,735,3.34,736,3.34,737,3.34,738,3.34,739,3.34,740,3.34,741,4.819,742,3.34,743,5.288,744,3.34,745,3.34,746,3.34,747,3.34,748,3.34,749,3.34,750,2.734,751,4.339,752,4.339,753,5.102,754,3.34,755,4.339,756,4.339,757,3.34,758,5.102,759,3.34,760,3.34,761,3.34,762,3.34,763,3.34,764,3.34,765,3.34]],["title/modules.html",[125,1.883]],["body/modules.html",[39,0.037,120,0.032,121,0.037,122,0.032,124,2.686,125,2.11,136,2.372,137,2.372,145,3.08,766,4.407,767,4.407,768,5.454,769,5.149,770,5.149]],["title/overview.html",[771,3.219]],["body/overview.html",[1,2.14,2,1.888,34,2.111,39,0.042,106,1.68,113,1.697,115,1.892,117,1.892,120,0.025,121,0.032,122,0.025,123,1.888,124,3.627,125,1.68,126,2.138,127,2.871,128,2.871,129,2.871,130,2.138,131,2.871,132,2.871,133,2.871,134,2.871,135,2.871,136,2.797,137,2.655,138,3.665,139,2.871,140,2.138,196,2.452,230,1.68,289,1.888,363,3.665,369,2.871,771,2.871,772,4.478,773,3.508,774,3.508]],["title/routes.html",[187,2.749]],["body/routes.html",[39,0.038,120,0.033,121,0.038,122,0.033,187,3.236]],["title/miscellaneous/variables.html",[775,1.971,776,2.837]],["body/miscellaneous/variables.html",[21,0.505,39,0.042,41,0.72,50,2.622,51,2.622,53,3.323,54,1.933,120,0.025,121,0.032,122,0.025,141,2.388,163,3.596,167,3.077,168,3.604,169,3.604,170,3.604,171,3.604,172,3.604,173,3.604,174,3.604,175,3.604,176,3.604,177,3.604,178,3.604,179,3.604,180,3.604,181,3.604,182,3.604,183,3.604,285,2.797,384,3.405,412,2.388,688,2.797,689,2.797,750,3.604,775,2.797,776,2.797,777,3.417,778,3.417,779,3.417,780,3.417]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":500,"title":{},"body":{"components/ChatboxComponent.html":{},"coverage.html":{}}}],["0.9.1",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["05kbccecnyxcfoxewcjk",{"_index":358,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["1",{"_index":363,"title":{},"body":{"components/ChatboxComponent.html":{},"overview.html":{}}}],["1.9.0",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["1092864489290",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["10px",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["180px",{"_index":516,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["1:1092864489290:web:1aaf648231980c30e3f3b3",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":365,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["2.0.8",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["24px",{"_index":524,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["25px",{"_index":530,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["3",{"_index":369,"title":{},"body":{"components/ChatboxComponent.html":{},"overview.html":{}}}],["3.3.31",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["32px",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":772,"title":{},"body":{"overview.html":{}}}],["4.17.1",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":773,"title":{},"body":{"overview.html":{}}}],["5.2.1",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["5px",{"_index":507,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["6.4.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":498,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["7",{"_index":442,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["7.3.0",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["8.0.4",{"_index":726,"title":{},"body":{"index.html":{}}}],["8.2.3",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["9drcjudfcrit3vaqtky_8pvzcosfiia",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["a.payload.doc.data",{"_index":581,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["a.payload.doc.id",{"_index":582,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["a.when.seconds",{"_index":586,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["absolute",{"_index":496,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["account_circle",{"_index":487,"title":{},"body":{"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["achieve",{"_index":672,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["actions.map(a",{"_index":580,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["actions.map(obj",{"_index":560,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["activatedroutesnapshot",{"_index":203,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["addnewchatroom",{"_index":542,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["addnewchatroom(status",{"_index":547,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["afauth",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatboxComponent.html":{}}}],["afs",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["aizasyd",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alex",{"_index":370,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["align",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["analysis",{"_index":722,"title":{},"body":{"index.html":{}}}],["angry",{"_index":655,"title":{},"body":{"injectables/MessageService.html":{}}}],["angular",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChatboxComponent.html":{}}}],["angular/fire/firestore",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["angular/forms",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":648,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatboxComponent.html":{}}}],["angularfireauthmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["angularfirestoredocument",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfirestoremodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["announcement",{"_index":599,"title":{},"body":{"components/HeaderComponent.html":{}}}],["apikey",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["app.component",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app/services/auth.service",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":124,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":136,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":744,"title":{},"body":{"index.html":{}}}],["async",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["auth.googleauthprovider",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authdomain",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":190,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":35,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":735,"title":{},"body":{"index.html":{}}}],["available",{"_index":770,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":529,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["await",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["b",{"_index":585,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["b.when.seconds",{"_index":587,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["ba34b",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ba34b.appspot.com",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ba34b.firebaseapp.com",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ba34b.firebaseio.com",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":525,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["black",{"_index":533,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["blog",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":499,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["browse",{"_index":768,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":743,"title":{},"body":{"index.html":{}}}],["button__at",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["button__logout",{"_index":601,"title":{},"body":{"components/HeaderComponent.html":{}}}],["calc(100",{"_index":515,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["canactivate",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":202,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":523,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["catch(e",{"_index":574,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["center",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["change",{"_index":737,"title":{},"body":{"index.html":{}}}],["chat",{"_index":54,"title":{"interfaces/Chat.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Chat.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chat.model",{"_index":540,"title":{},"body":{"interfaces/Chatroom.html":{}}}],["chatbox",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatboxComponent.html":{}}}],["chatbox'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["chatbox.component.html",{"_index":314,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["chatbox.component.scss",{"_index":313,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["chatbox/chatbox.component",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["chatboxcomponent",{"_index":113,"title":{"components/ChatboxComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatroom",{"_index":535,"title":{"interfaces/Chatroom.html":{}},"body":{"interfaces/Chatroom.html":{},"coverage.html":{}}}],["chatroomid",{"_index":465,"title":{},"body":{"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{}}}],["chatrooms",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["chatroomservice",{"_index":337,"title":{"injectables/ChatroomService.html":{}},"body":{"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"coverage.html":{}}}],["chatroomsubscription",{"_index":315,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["chats",{"_index":537,"title":{},"body":{"interfaces/Chatroom.html":{}}}],["chatservice",{"_index":34,"title":{"injectables/ChatService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatting",{"_index":485,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["chatuser",{"_index":413,"title":{"interfaces/Chatuser.html":{}},"body":{"components/ChatboxComponent.html":{},"interfaces/Chatuser.html":{},"coverage.html":{}}}],["check",{"_index":764,"title":{},"body":{"index.html":{}}}],["chitty",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chittyc",{"_index":376,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["chittychat",{"_index":717,"title":{},"body":{"index.html":{}}}],["class",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["cli",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["client",{"_index":304,"title":{},"body":{"injectables/ChatService.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":739,"title":{},"body":{"index.html":{}}}],["collection(`chatrooms",{"_index":567,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["collection(`chatrooms/${chatroomid}/chats",{"_index":576,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/MessageService.html":{}}}],["color",{"_index":526,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["column",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["config",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('access",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('message",{"_index":657,"title":{},"body":{"injectables/MessageService.html":{}}}],["console.log('new",{"_index":571,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["console.log('next",{"_index":311,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log(`sending",{"_index":656,"title":{},"body":{"injectables/MessageService.html":{}}}],["console.log(conversation",{"_index":467,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["console.log(e",{"_index":575,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["console.log(message",{"_index":419,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["console.log(res.payload.data",{"_index":438,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["console.log(this.events",{"_index":429,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["console.log(this.friendlist",{"_index":433,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["console.log(this.friendlistid",{"_index":443,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["console.log(this.messages",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["console.log(this.selectedchatroomid",{"_index":459,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["console.log(this.user",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(this.userinfo",{"_index":423,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["const",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["constructor(afauth",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(auth",{"_index":199,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(chatservice",{"_index":334,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["constructor(db",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["constructor(private",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["constructor(public",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["container",{"_index":494,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["content",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Chat.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"injectables/MessageService.html":{}}}],["conversation",{"_index":389,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["conversation.display_name",{"_index":480,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["conversation.id",{"_index":449,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["conversationid",{"_index":393,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["conversations",{"_index":316,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["conversationslistid",{"_index":317,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["coverage",{"_index":677,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":573,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["created_at",{"_index":538,"title":{},"body":{"interfaces/Chatroom.html":{}}}],["credential",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["cursor",{"_index":521,"title":{},"body":{"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["data",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["databaseurl",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":471,"title":{},"body":{"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{}}}],["db",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["declarations",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["delete",{"_index":481,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["deleteconversation",{"_index":325,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["deleteconversation(id",{"_index":340,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["deleteindex",{"_index":468,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["denied",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dependencies",{"_index":126,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["design",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["designed",{"_index":385,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["dev",{"_index":732,"title":{},"body":{"index.html":{}}}],["development",{"_index":727,"title":{},"body":{"index.html":{}}}],["direction",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["directive",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["directives",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":742,"title":{},"body":{"index.html":{}}}],["directory",{"_index":747,"title":{},"body":{"index.html":{}}}],["display",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["display_name",{"_index":464,"title":{},"body":{"components/ChatboxComponent.html":{},"interfaces/Chatuser.html":{}}}],["displayname",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["dist",{"_index":746,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":403,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["doc(this.db.createid",{"_index":568,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/MessageService.html":{}}}],["document.getelementbyid('content",{"_index":476,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["documentation",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["drawer",{"_index":504,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["drawer.mat",{"_index":503,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["dynamic",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["e0cgp5ipwgb9auc3ium2",{"_index":360,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["e2e",{"_index":759,"title":{},"body":{"index.html":{}}}],["each",{"_index":720,"title":{},"body":{"index.html":{}}}],["element",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["element.content",{"_index":421,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["element.user",{"_index":428,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["email",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Chatuser.html":{},"interfaces/User.html":{}}}],["emoji",{"_index":721,"title":{},"body":{"index.html":{}}}],["emotion",{"_index":291,"title":{},"body":{"interfaces/Chat.html":{},"injectables/MessageService.html":{}}}],["empty",{"_index":508,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["end",{"_index":758,"title":{},"body":{"index.html":{}}}],["environment",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["event.text",{"_index":490,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["events",{"_index":318,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["execute",{"_index":755,"title":{},"body":{"index.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{}}}],["exports",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["express",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["fafafa",{"_index":527,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["false",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["files",{"_index":738,"title":{},"body":{"index.html":{}}}],["filter",{"_index":402,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["firebase",{"_index":412,"title":{},"body":{"components/ChatboxComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase/app",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["firestore",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["flag",{"_index":749,"title":{},"body":{"index.html":{}}}],["flex",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["font",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["formsmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["forum",{"_index":479,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["friend.name",{"_index":482,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["friendindex",{"_index":460,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["friendlist",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatuser.html":{},"interfaces/User.html":{}}}],["friendlistid",{"_index":319,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["full",{"_index":531,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["further",{"_index":761,"title":{},"body":{"index.html":{}}}],["general",{"_index":374,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["generate",{"_index":741,"title":{},"body":{"index.html":{}}}],["generated",{"_index":724,"title":{},"body":{"index.html":{}}}],["getchathistory",{"_index":543,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["getchathistory(roomid",{"_index":552,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["getchatroomlist",{"_index":544,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["getconversations",{"_index":326,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["getcurrentuserinfo",{"_index":664,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["getcurrentuserinfo('ph84kj5xx2mhrck30wqphg10gri1",{"_index":444,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["getcurrentuserinfo(friendid",{"_index":436,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["getcurrentuserinfo(userid",{"_index":667,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["getfriendlist",{"_index":327,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["getmessages",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{}}}],["getting",{"_index":716,"title":{"index.html":{}},"body":{}}],["getupdates",{"_index":545,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["getupdates(chatroomid",{"_index":556,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["getupdates(this.selectedchatroomid",{"_index":418,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["getuserlist",{"_index":665,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["go",{"_index":763,"title":{},"body":{"index.html":{}}}],["google",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["googlesignin",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":769,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":196,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":197,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guest",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["guestlogin",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["h1",{"_index":520,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["h2",{"_index":510,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["hammerjs",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["header",{"_index":509,"title":{},"body":{"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["header.component.html",{"_index":591,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":590,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":115,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["help",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["here",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["heroes",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["history.mat",{"_index":513,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["howdy",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["html",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["http://localhost:3000",{"_index":300,"title":{},"body":{"injectables/ChatService.html":{}}}],["http://localhost:4200",{"_index":734,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["https://chitty",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":532,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["id",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["identifier",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["imports",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{}}}],["info.service",{"_index":409,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["info.service.ts",{"_index":663,"title":{},"body":{"injectables/UserInfoService.html":{},"coverage.html":{}}}],["info.service.ts:13",{"_index":669,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:27",{"_index":668,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["info.service.ts:7",{"_index":666,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["injectable",{"_index":212,"title":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["injectables",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{},"overview.html":{}}}],["input",{"_index":397,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["input__field",{"_index":534,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["inputs",{"_index":332,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["interface",{"_index":288,"title":{"interfaces/Chat.html":{},"interfaces/Chatroom.html":{},"interfaces/Chatuser.html":{},"interfaces/User.html":{}},"body":{"interfaces/Chat.html":{},"interfaces/Chatroom.html":{},"interfaces/Chatuser.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":289,"title":{},"body":{"interfaces/Chat.html":{},"interfaces/Chatroom.html":{},"interfaces/Chatuser.html":{},"interfaces/User.html":{},"overview.html":{}}}],["io",{"_index":302,"title":{},"body":{"injectables/ChatService.html":{}}}],["io(this.url",{"_index":306,"title":{},"body":{"injectables/ChatService.html":{}}}],["item",{"_index":462,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["item.id",{"_index":463,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["items",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["ji9ldkigbhxbadczyb1e",{"_index":361,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["john",{"_index":368,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["joined",{"_index":492,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["justify",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["karma",{"_index":757,"title":{},"body":{"index.html":{}}}],["keys).length",{"_index":489,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["l9a3all48lzkgjnhnoktff0jreg1",{"_index":373,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["left",{"_index":484,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["legend",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["links",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":514,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["logged",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedin",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{}}}],["login",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["login__title",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["logincomponent",{"_index":117,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{}}}],["luke",{"_index":367,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["map",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["map(actions",{"_index":579,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["map(messages",{"_index":583,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["map(user",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{}}}],["margin",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["mat",{"_index":502,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["matautocompletemodule",{"_index":617,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":618,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":619,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":620,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":621,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":622,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":623,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodule",{"_index":624,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["materialmodule",{"_index":137,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":625,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":626,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":627,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":628,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":629,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":630,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":631,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":632,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":633,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":634,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":635,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodule",{"_index":636,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":637,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":638,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":639,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":640,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":641,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":642,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":647,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":643,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":644,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":645,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":646,"title":{},"body":{"modules/MaterialModule.html":{}}}],["members",{"_index":390,"title":{},"body":{"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{}}}],["memeber",{"_index":388,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["menu",{"_index":595,"title":{},"body":{"components/HeaderComponent.html":{}}}],["merge",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["mesages",{"_index":364,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["message",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/MessageService.html":{}}}],["message.foreach((element",{"_index":420,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["messages",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["messages.sort((a",{"_index":584,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["messageservice",{"_index":335,"title":{"injectables/MessageService.html":{}},"body":{"components/ChatboxComponent.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["messagingsenderid",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/UserInfoService.html":{}}}],["methods",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["miscellaneous",{"_index":775,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/chat.model",{"_index":411,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["models/chatuser.model",{"_index":414,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["models/user.model",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatboxComponent.html":{}}}],["module",{"_index":123,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["module.ts",{"_index":616,"title":{},"body":{"modules/MaterialModule.html":{}}}],["modules",{"_index":125,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/material",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":401,"title":{},"body":{"components/ChatboxComponent.html":{},"dependencies.html":{}}}],["more",{"_index":762,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":387,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["mycustomdata",{"_index":661,"title":{},"body":{"interfaces/User.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{},"index.html":{}}}],["navigate",{"_index":733,"title":{},"body":{"index.html":{}}}],["new",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ng",{"_index":730,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["number",{"_index":346,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["obj.payload.doc.data",{"_index":562,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["obj.payload.doc.id",{"_index":561,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["objdiv",{"_index":475,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["objdiv.scrollheight",{"_index":478,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["objdiv.scrolltop",{"_index":477,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["object",{"_index":384,"title":{},"body":{"components/ChatboxComponent.html":{},"injectables/UserInfoService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["observable.create(observer",{"_index":308,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.next(message",{"_index":310,"title":{},"body":{"injectables/ChatService.html":{}}}],["of(null",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["open",{"_index":718,"title":{},"body":{"index.html":{}}}],["openconversation",{"_index":328,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["openconversation(index",{"_index":345,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{}}}],["out",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":517,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["overview",{"_index":771,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ownerid",{"_index":549,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["p",{"_index":511,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["package",{"_index":692,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":506,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["path",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ph84kj5xx2mhrck30wqphg10gri1",{"_index":392,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["photourl",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Chatuser.html":{},"interfaces/User.html":{}}}],["pipe",{"_index":578,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["pipe(map(actions",{"_index":559,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["pipe(take(1",{"_index":564,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["pointer",{"_index":522,"title":{},"body":{"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{}}}],["position",{"_index":495,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["power_settings_new",{"_index":596,"title":{},"body":{"components/HeaderComponent.html":{}}}],["private",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{}}}],["prod",{"_index":748,"title":{},"body":{"index.html":{}}}],["production",{"_index":750,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":723,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"interfaces/Chatuser.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["protractor",{"_index":760,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["provider",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["providers",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["public/private",{"_index":565,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["random",{"_index":372,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["randomstring",{"_index":415,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["reactiveformsmodule",{"_index":649,"title":{},"body":{"modules/MaterialModule.html":{}}}],["readme",{"_index":765,"title":{},"body":{"index.html":{}}}],["reload",{"_index":736,"title":{},"body":{"index.html":{}}}],["res.payload.data().displayname.substring(0",{"_index":441,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["res.payload.data().uid",{"_index":440,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["reset",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respond.payload.data",{"_index":674,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["respond.payload.id",{"_index":675,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["result",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result[0].display_name",{"_index":451,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["results",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["right",{"_index":501,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["room",{"_index":572,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["roomid",{"_index":554,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["roomname",{"_index":539,"title":{},"body":{"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ChatroomService.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["root'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["route",{"_index":774,"title":{},"body":{"overview.html":{}}}],["router",{"_index":200,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["routermodule",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":205,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":187,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":729,"title":{},"body":{"index.html":{}}}],["running",{"_index":751,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/from",{"_index":399,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["rxjs/add/operator/map",{"_index":400,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["rxjs/observable",{"_index":398,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["rxjs/operators",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"injectables/UserInfoService.html":{}}}],["scaffolding",{"_index":740,"title":{},"body":{"index.html":{}}}],["scan",{"_index":405,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["scroll",{"_index":519,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["secret",{"_index":381,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["secretcode",{"_index":320,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["section",{"_index":528,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["select",{"_index":483,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selectconversation",{"_index":329,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selectconversation(id",{"_index":348,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selectedchatroomid",{"_index":321,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selectedconversation",{"_index":322,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selectedconversation.members",{"_index":488,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selectedconversation.members[0].name",{"_index":486,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selectedconversation.members[event.from].name",{"_index":491,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selectedname",{"_index":323,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["send",{"_index":493,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["sendmessage",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/MessageService.html":{}}}],["sendmessage(message",{"_index":297,"title":{},"body":{"injectables/ChatService.html":{},"components/ChatboxComponent.html":{}}}],["sendmessage(userid",{"_index":652,"title":{},"body":{"injectables/MessageService.html":{}}}],["sendmsgtofirebase",{"_index":330,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["sendmsgtofirebase(message",{"_index":351,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["sent",{"_index":659,"title":{},"body":{"injectables/MessageService.html":{}}}],["serve",{"_index":731,"title":{},"body":{"index.html":{}}}],["server",{"_index":728,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["services/chat.service",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatboxComponent.html":{}}}],["services/chatroom.service",{"_index":410,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["services/message.service",{"_index":407,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["services/user",{"_index":408,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["set",{"_index":569,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/MessageService.html":{}}}],["sets",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["side",{"_index":505,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["signout",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["size",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["skipwhile",{"_index":404,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["socket",{"_index":294,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.io",{"_index":303,"title":{},"body":{"injectables/ChatService.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{},"index.html":{}}}],["src/.../app.module.ts",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth.guard.ts",{"_index":198,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:10",{"_index":201,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:13",{"_index":206,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/chatbox/chatbox.component.ts",{"_index":312,"title":{},"body":{"components/ChatboxComponent.html":{},"coverage.html":{}}}],["src/app/chatbox/chatbox.component.ts:101",{"_index":338,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:104",{"_index":354,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:111",{"_index":344,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:143",{"_index":353,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:160",{"_index":343,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:181",{"_index":342,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:185",{"_index":349,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:193",{"_index":347,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:216",{"_index":341,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:220",{"_index":352,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:230",{"_index":350,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:33",{"_index":339,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:34",{"_index":383,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:35",{"_index":356,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:36",{"_index":395,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:37",{"_index":396,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:38",{"_index":379,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:39",{"_index":380,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:40",{"_index":382,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:41",{"_index":378,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:42",{"_index":362,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:48",{"_index":394,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:61",{"_index":357,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:63",{"_index":377,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/chatbox/chatbox.component.ts:90",{"_index":366,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["src/app/header/header.component.ts",{"_index":589,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:13",{"_index":593,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:9",{"_index":592,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:10",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:12",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:8",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/models/chat.model.ts",{"_index":290,"title":{},"body":{"interfaces/Chat.html":{},"coverage.html":{}}}],["src/app/models/chatroom.model.ts",{"_index":536,"title":{},"body":{"interfaces/Chatroom.html":{},"coverage.html":{}}}],["src/app/models/chatuser.model.ts",{"_index":588,"title":{},"body":{"interfaces/Chatuser.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts",{"_index":660,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/modules/material",{"_index":615,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/auth.service",{"_index":594,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:15",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:43",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:60",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/chat.service.ts",{"_index":293,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{}}}],["src/app/services/chat.service.ts:10",{"_index":296,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:16",{"_index":298,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:20",{"_index":299,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:9",{"_index":301,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chatroom.service.ts",{"_index":541,"title":{},"body":{"injectables/ChatroomService.html":{},"coverage.html":{}}}],["src/app/services/chatroom.service.ts:12",{"_index":555,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["src/app/services/chatroom.service.ts:24",{"_index":553,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["src/app/services/chatroom.service.ts:38",{"_index":550,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["src/app/services/chatroom.service.ts:58",{"_index":557,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["src/app/services/chatroom.service.ts:8",{"_index":546,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["src/app/services/message.service.ts",{"_index":650,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/services/message.service.ts:11",{"_index":654,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:7",{"_index":651,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/user",{"_index":662,"title":{},"body":{"injectables/UserInfoService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["started",{"_index":611,"title":{"index.html":{}},"body":{"components/LoginComponent.html":{}}}],["state",{"_index":204,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statechanges(['added",{"_index":577,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["statements",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":551,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["storagebucket",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":745,"title":{},"body":{"index.html":{}}}],["string",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["subscribe",{"_index":671,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["subscribe((message",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["subscribe((res",{"_index":437,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["subscribe(res",{"_index":445,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["subscription",{"_index":355,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["successfully",{"_index":658,"title":{},"body":{"injectables/MessageService.html":{}}}],["support",{"_index":766,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":767,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatboxComponent.html":{}}}],["switchmap(user",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["syfrc5n7qlunyia8ajwqwysddfx1",{"_index":371,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["table",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChatroomService.html":{}}}],["take(1",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["test",{"_index":754,"title":{},"body":{"index.html":{}}}],["tests",{"_index":753,"title":{},"body":{"index.html":{}}}],["text",{"_index":324,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["then((data",{"_index":570,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/MessageService.html":{}}}],["thing2",{"_index":598,"title":{},"body":{"components/HeaderComponent.html":{}}}],["thing3",{"_index":600,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.afauth.auth.signinwithpopup(provider",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signout",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.authstate.pipe",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afs.doc(`users/${user.uid",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afs.doc(`users/${user.uid}`).valuechanges",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.auth.user$.pipe",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.chatroomservice",{"_index":417,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.chatroomsubscription",{"_index":427,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.chatroomsubscription.unsubscribe",{"_index":453,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.chatservice",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["this.chatservice.sendmessage(this.message",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["this.conversations.filter",{"_index":448,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.conversations.findindex",{"_index":461,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.conversations.findindex(item",{"_index":469,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.conversations.push(conversation",{"_index":466,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.conversations.splice(deleteindex",{"_index":470,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.conversationslistid",{"_index":446,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.conversationslistid[index",{"_index":458,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.db",{"_index":566,"title":{},"body":{"injectables/ChatroomService.html":{},"injectables/MessageService.html":{}}}],["this.db.collection('chatrooms').snapshotchanges",{"_index":558,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["this.db.collection('users').snapshotchanges",{"_index":673,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.db.collection(`chatrooms/${roomid}/chats`).snapshotchanges",{"_index":563,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["this.db.doc(`users/${userid}`).snapshotchanges",{"_index":676,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.events",{"_index":426,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.events.push",{"_index":416,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.friendlist.push",{"_index":439,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.friendlist[index].id",{"_index":455,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.friendlist[index].name",{"_index":456,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.friendlistid",{"_index":430,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.friendlistid.foreach(friendid",{"_index":434,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.getconversations",{"_index":425,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.getfriendlist",{"_index":424,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.message",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["this.messages.push(message",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{}}}],["this.messageservice.sendmessage",{"_index":472,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.openconversation(index",{"_index":452,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.router.navigate",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/login",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.selectedchatroomid",{"_index":457,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.selectedconversation.members[0].name",{"_index":450,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.selectedconversation.members[0].userid",{"_index":454,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.sendmsgtofirebase(message",{"_index":474,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.socket",{"_index":305,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.emit('new",{"_index":307,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.on('new",{"_index":309,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.updatechathistory",{"_index":422,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.updateuserdata(credential.user",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfo",{"_index":431,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.userinfo.chatrooms",{"_index":447,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.userinfo.friendlist",{"_index":432,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.userinfo.uid",{"_index":473,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["this.userinfoservice",{"_index":435,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["throttletime",{"_index":406,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["title",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["tone",{"_index":653,"title":{},"body":{"injectables/MessageService.html":{}}}],["tone_id",{"_index":292,"title":{},"body":{"interfaces/Chat.html":{},"injectables/MessageService.html":{}}}],["top",{"_index":497,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["tour",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["true",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"interfaces/Chatroom.html":{},"injectables/ChatroomService.html":{},"interfaces/Chatuser.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"injectables/UserInfoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/jquery",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["ugqevnxekzrld8ujqtkz",{"_index":359,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["uid",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Chat.html":{},"interfaces/Chatroom.html":{},"interfaces/Chatuser.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["unit",{"_index":752,"title":{},"body":{"index.html":{}}}],["updatechathistory",{"_index":331,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["updateuserdata",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdata(user",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["url",{"_index":295,"title":{},"body":{"injectables/ChatService.html":{}}}],["urltree",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":670,"title":{},"body":{"injectables/UserInfoService.html":{},"index.html":{}}}],["user",{"_index":225,"title":{"interfaces/User.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Chat.html":{},"components/ChatboxComponent.html":{},"injectables/MessageService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user.chatrooms",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.displayname",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["user.email",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.friendlist",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.photourl",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.uid",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["userid",{"_index":391,"title":{},"body":{"components/ChatboxComponent.html":{},"injectables/MessageService.html":{},"injectables/UserInfoService.html":{}}}],["userinfo",{"_index":333,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["userinfoservice",{"_index":336,"title":{"injectables/UserInfoService.html":{}},"body":{"components/ChatboxComponent.html":{},"injectables/UserInfoService.html":{},"coverage.html":{}}}],["userlist",{"_index":548,"title":{},"body":{"injectables/ChatroomService.html":{}}}],["userref",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["userref.set(data",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ChatboxComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["variable",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":776,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":725,"title":{},"body":{"index.html":{}}}],["via",{"_index":756,"title":{},"body":{"index.html":{}}}],["voicemail",{"_index":597,"title":{},"body":{"components/HeaderComponent.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChatService.html":{},"components/ChatboxComponent.html":{},"injectables/ChatroomService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{}}}],["way",{"_index":386,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["website",{"_index":719,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["widows",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":512,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["works",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["x",{"_index":518,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["ykoayua5iib32bukkvyvwok6xx13",{"_index":375,"title":{},"body":{"components/ChatboxComponent.html":{}}}],["zone.js",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore, chatService: ChatService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'chitty-chat'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ChatService } from './services/chat.service';\nimport { AuthService } from './services/auth.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'chitty-chat';\n  message = '';\n  messages: string[] = [];\n  constructor(db: AngularFirestore, private chatService: ChatService, public auth: AuthService) {}\n\n  ngOnInit() {\n    this.chatService\n      .getMessages()\n      .subscribe((message: string) => {\n        this.messages.push(message);\n      });\n    console.log(this.messages);\n  }\n\n  sendMessage() {\n    this.chatService.sendMessage(this.message);\n    this.message = '';\n  }\n\n}\n\n    \n\n    \n        \n\n  Material design works!\n  \n  \n    Welcome to {{ title }}!\n  \n  \n\nHere are some links to help you start: \n\n  \n    Tour of Heroes\n  \n  \n    CLI Documentation\n  \n  \n    Angular blog\n  \n -->\n -->\n\n\n    \n    \n    \n\n\n\n    \n    Welcome to Chitty Chat!\n  Login with Google\n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .button__at {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    widows: 100%;\n    height: 100%;\n}\n\n.login__title {\n    font-size: 32px;\n    margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Material design works!        Welcome to {{ title }}!    Here are some links to help you start:       Tour of Heroes        CLI Documentation        Angular blog   --> -->                    Welcome to Chitty Chat!  Login with Google'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatboxComponent', 'selector': 'app-chatbox'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatboxComponent\n\nChatboxComponent\n\nAppModule -->\n\nChatboxComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nChatService\n\nChatService\n\nAppModule -->\n\nChatService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChatboxComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChatService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatboxComponent } from './chatbox/chatbox.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChatService } from './services/chat.service';\nimport { MaterialModule } from './modules/material-module';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { LoginComponent } from './login/login.component';\n\nimport { environment } from '../environments/environment';\nimport { HeaderComponent } from './header/header.component';\n\nconst config = {\n  apiKey: 'AIzaSyD-9drCjUDfcRit3vaqTkY_8PVZCOsfiiA',\n  authDomain: 'chitty-chat-ba34b.firebaseapp.com',\n  databaseURL: 'https://chitty-chat-ba34b.firebaseio.com',\n  projectId: 'chitty-chat-ba34b',\n  storageBucket: 'chitty-chat-ba34b.appspot.com',\n  messagingSenderId: '1092864489290',\n  appId: '1:1092864489290:web:1aaf648231980c30e3f3b3'\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatboxComponent,\n    LoginComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MaterialModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n  ],\n  exports: [\n  ],\n  providers: [ChatService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatboxComponent } from './chatbox/chatbox.component';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {path: 'chatbox', component: ChatboxComponent, canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService} from '../app/services/auth.service';\nimport { tap, map, take } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean | UrlTree {\n      return this.auth.user$.pipe(\n        take(1),\n        map(user => !!user), //  {\n          if (!loggedIn) {\n            console.log('access denied');\n            this.router.navigate(['/login']);\n          }\n        })\n      );\n    }\n\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                googleSignin\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                    Private\n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, afs: AngularFirestore, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            googleSignin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    googleSignin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateUserData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserData(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.model';\n\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n\n    user$: Observable;\n\n    constructor(\n        private afAuth: AngularFireAuth,\n        private afs: AngularFirestore,\n        private router: Router\n    ) {\n      this.user$ = this.afAuth.authState.pipe(\n        switchMap(user => {\n            // Logged in\n          if (user) {\n            console.log( `users id is /${user.uid}`);\n            console.log(this.user$);\n            return this.afs.doc(`users/${user.uid}`).valueChanges();\n          } else {\n            // Logged out\n            return of(null);\n          }\n        })\n      );\n     }\n\n     async googleSignin() {\n      const provider = new auth.GoogleAuthProvider();\n      const credential = await this.afAuth.auth.signInWithPopup(provider);\n      return this.updateUserData(credential.user);\n    }\n\n    private updateUserData(user) {\n      // Sets user data to firestore on login\n      const userRef: AngularFirestoreDocument = this.afs.doc(`users/${user.uid}`);\n\n      const data = {\n        uid: user.uid,\n        email: user.email,\n        displayName: user.displayName,\n        photoURL: user.photoURL,\n        friendList: user.friendList,\n        chatrooms: user.chatrooms\n      };\n\n      return userRef.set(data, { merge: true });\n\n    }\n\n    async signOut() {\n      await this.afAuth.auth.signOut();\n      this.router.navigate(['/']);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chat.html":{"url":"interfaces/Chat.html","title":"interface - Chat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Chat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chat.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        emotion\n                                \n                                \n                                        from\n                                \n                                \n                                        tone_id\n                                \n                                \n                                        type\n                                \n                                \n                                        uid\n                                \n                                \n                                        user\n                                \n                                \n                                        when\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emotion\n                                    \n                                \n                                \n                                    \n                                        emotion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tone_id\n                                    \n                                \n                                \n                                    \n                                        tone_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        when\n                                    \n                                \n                                \n                                    \n                                        when:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Chat {\n    uid: string;\n    content: string;\n    emotion: string;\n    from: string;\n    tone_id: string;\n    type: string;\n    when: string;\n    user: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMessages\n                            \n                            \n                                    Private\n                                socket\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            socket\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/chat.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:3000'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  private url = 'http://localhost:3000';\n  private socket;\n\n  constructor() {\n    this.socket = io(this.url);\n  }\n\n  public sendMessage(message) {\n    this.socket.emit('new-message', message);\n  }\n\n  public getMessages = () => {\n    return Observable.create(observer => {\n      this.socket.on('new-message', message => {\n        observer.next(message);\n        console.log('next' + message);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatboxComponent.html":{"url":"components/ChatboxComponent.html","title":"component - ChatboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chatbox/chatbox.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chatbox\n            \n\n            \n                styleUrls\n                ./chatbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chatbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                chatroomSubscription\n                            \n                            \n                                conversations\n                            \n                            \n                                conversationsListId\n                            \n                            \n                                events\n                            \n                            \n                                friendList\n                            \n                            \n                                friendListId\n                            \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                secretCode\n                            \n                            \n                                selectedChatRoomID\n                            \n                            \n                                selectedConversation\n                            \n                            \n                                selectedName\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteConversation\n                            \n                            \n                                getConversations\n                            \n                            \n                                getFriendList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openConversation\n                            \n                            \n                                selectConversation\n                            \n                            \n                                sendMessage\n                            \n                            \n                                sendMsgToFirebase\n                            \n                            \n                                updateChatHistory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chatService: ChatService, auth: AuthService, afAuth: AngularFireAuth, messageService: MessageService, userInfoService: UserInfoService, chatRoomService: ChatroomService)\n                    \n                \n                        \n                            \n                                Defined in src/app/chatbox/chatbox.component.ts:101\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userInfoService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatRoomService\n                                                  \n                                                        \n                                                                        ChatroomService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteConversation\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteConversation(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConversations\n                        \n                        \n                    \n                \n            \n            \n                \ngetConversations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFriendList\n                        \n                        \n                    \n                \n            \n            \n                \ngetFriendList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openConversation\n                        \n                        \n                    \n                \n            \n            \n                \nopenConversation(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectConversation\n                        \n                        \n                    \n                \n            \n            \n                \nselectConversation(id: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMsgToFirebase\n                        \n                        \n                    \n                \n            \n            \n                \nsendMsgToFirebase(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateChatHistory\n                        \n                        \n                    \n                \n            \n            \n                \nupdateChatHistory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chatbox/chatbox.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chatroomSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conversations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conversationsListId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    '05kbCceCnYxcfOxewCJK',\n    'UgQEVNxekZrld8UJqtkZ',\n    'e0cGp5IpWGb9AuC3iuM2',\n    'ji9ldKigbHxBadcZyb1E'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      from: '1',\n      type: 'text',\n      text: 'mesages'\n    },\n    {\n      from: '2',\n      type: 'text',\n      text: 'messages'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            friendList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    // {\n    //   id: 1,\n    //   name: 'Luke'\n    // },\n    // {\n    //   id: 2,\n    //   name: 'John'\n    // },\n    // {\n    //   id: 3,\n    //   name: 'Alex'\n    // },\n    {\n      id: 'SyFrC5N7QlUNyia8aJWqWySdDFx1',\n      name: 'Random'\n    },\n    {\n      id: 'l9A3All48lZkGjNhnOkTfF0JREg1',\n      name: 'General'\n    },\n    {\n      id: 'yKoayuA5IIb32BUkKvYvWOk6xx13',\n      name: 'ChittyC'\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            friendListId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secretCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'secret'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedChatRoomID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UgQEVNxekZrld8UJqtkZ'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedConversation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // this is designed this way because we might have multiple memeber in a conversation\n    members: [\n      {\n        userID: '1',\n        name: 'Random'\n      }\n    ],\n    me: {\n      id: 'ph84kj5XX2MHrCK30wqPhg10gRi1'\n    },\n    conversationID: 'UgQEVNxekZrld8UJqtkZ'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/chatbox/chatbox.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from '../services/chat.service';\n// import { Observable } from 'rxjs/Observable';\n// import 'rxjs/add/observable/from';\n// import 'rxjs/add/operator/map';\nimport * as moment from 'moment';\nimport {\n  filter,\n  distinctUntilChanged,\n  skipWhile,\n  scan,\n  throttleTime,\n  switchMap\n} from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { MessageService } from '../services/message.service';\nimport { UserInfoService } from '../services/user-info.service';\nimport { ChatroomService } from '../services/chatroom.service';\nimport { User } from '../models/user.model';\nimport { Chat } from '../models/chat.model';\nimport { UserInfo } from 'firebase';\nimport { Chatuser } from '../models/chatuser.model';\nimport { Subscription } from 'rxjs';\n// import randomString from 'randomstring';\n\n@Component({\n  selector: 'app-chatbox',\n  templateUrl: './chatbox.component.html',\n  styleUrls: ['./chatbox.component.scss']\n})\nexport class ChatboxComponent implements OnInit {\n  @Input() userInfo: User;\n  selectedChatRoomID = 'UgQEVNxekZrld8UJqtkZ';\n  chatroomSubscription: Subscription;\n  selectedName: string;\n  text: string;\n  message = '';\n  messages: string[] = [];\n  secretCode = 'secret';\n  friendListId = [];\n  conversationsListId = [\n    '05kbCceCnYxcfOxewCJK',\n    'UgQEVNxekZrld8UJqtkZ',\n    'e0cGp5IpWGb9AuC3iuM2',\n    'ji9ldKigbHxBadcZyb1E'\n  ];\n  selectedConversation = {\n    // this is designed this way because we might have multiple memeber in a conversation\n    members: [\n      {\n        userID: '1',\n        name: 'Random'\n      }\n    ],\n    me: {\n      id: 'ph84kj5XX2MHrCK30wqPhg10gRi1'\n    },\n    conversationID: 'UgQEVNxekZrld8UJqtkZ'\n  };\n  conversations = [];\n\n  friendList = [\n    // {\n    //   id: 1,\n    //   name: 'Luke'\n    // },\n    // {\n    //   id: 2,\n    //   name: 'John'\n    // },\n    // {\n    //   id: 3,\n    //   name: 'Alex'\n    // },\n    {\n      id: 'SyFrC5N7QlUNyia8aJWqWySdDFx1',\n      name: 'Random'\n    },\n    {\n      id: 'l9A3All48lZkGjNhnOkTfF0JREg1',\n      name: 'General'\n    },\n    {\n      id: 'yKoayuA5IIb32BUkKvYvWOk6xx13',\n      name: 'ChittyC'\n    }\n  ];\n\n  events = [\n    {\n      from: '1',\n      type: 'text',\n      text: 'mesages'\n    },\n    {\n      from: '2',\n      type: 'text',\n      text: 'messages'\n    }\n  ];\n  constructor(\n    private chatService: ChatService,\n    public auth: AuthService,\n    private afAuth: AngularFireAuth,\n    private messageService: MessageService,\n    private userInfoService: UserInfoService,\n    private chatRoomService: ChatroomService\n  ) {}\n\n  ngOnInit() {\n    // this.chatService\n    //   .getMessages()\n    //   .subscribe((message: string) => {\n    //     this.messages.push(message);\n    //     this.events.push({\n    //       from: '1',\n    //       type: 'text',\n    //       text: message\n    //     });\n    //   });\n\n    // this.chatRoomService\n    // .getUpdates(this.selectedChatRoomID)\n    // .subscribe((message: any) => {\n    //   console.log(message);\n    //   message.forEach((element: Chat) => {\n    //     this.events.push({\n    //     from: '1',\n    //     type: 'text',\n    //     text: element.content\n    //   });\n    //   });\n    // });\n    this.updateChatHistory();\n    // console.log(this.messages);\n\n    console.log(this.userInfo);\n    // this.getFriendList();\n    // this.getConversations();\n  }\n\n  updateChatHistory() {\n    this.events = [];\n    this.chatroomSubscription = this.chatRoomService\n      .getUpdates(this.selectedChatRoomID)\n      .subscribe((message: any) => {\n        console.log(message);\n        message.forEach((element: Chat) => {\n          this.events.push({\n            from: element.user,\n            type: 'text',\n            text: element.content\n          });\n          console.log(this.events);\n        });\n      });\n  }\n\n  getFriendList() {\n    this.friendListId = this.userInfo ? this.userInfo.friendList : [];\n    console.log(this.friendList);\n    this.friendListId.forEach(friendID => {\n      this.userInfoService\n        .getCurrentUserInfo(friendID)\n        .subscribe((res: any) => {\n          console.log(res.payload.data());\n          this.friendList.push({\n            id: res.payload.data().uid,\n            name: res.payload.data().displayName.substring(0, 7)\n          });\n          console.log(this.friendList);\n        });\n    });\n    console.log(this.friendListId);\n    this.userInfoService\n      .getCurrentUserInfo('ph84kj5XX2MHrCK30wqPhg10gRi1')\n      .subscribe(res => console.log(res.payload.data()));\n  }\n\n  getConversations() {\n    this.conversationsListId = this.userInfo ? this.userInfo.chatrooms : [];\n  }\n\n  selectConversation(id: string, index: number) {\n    const result = this.conversations.filter(\n      conversation => conversation.id === id\n    );\n    this.selectedConversation.members[0].name = result[0].display_name;\n    this.openConversation(index);\n  }\n\n  openConversation(index: number) {\n    this.chatroomSubscription.unsubscribe();\n    this.selectedConversation.members[0].userID = this.friendList[index].id;\n    this.selectedConversation.members[0].name = this.friendList[index].name;\n    this.selectedChatRoomID = this.conversationsListId[index];\n    console.log(this.selectedChatRoomID);\n    this.updateChatHistory();\n    const friendIndex = this.conversations.findIndex(\n      item => item.id === this.friendList[index].id\n    );\n    if (friendIndex !== -1) {\n      return;\n    } else {\n      const conversation = {\n        id: this.friendList[index].id,\n        display_name: this.friendList[index].name,\n        chatRoomId: this.selectedChatRoomID\n      };\n      this.conversations.push(conversation);\n      console.log(conversation);\n    }\n  }\n\n  deleteConversation(id: string) {\n    const deleteIndex = this.conversations.findIndex(item => item.id === id);\n    this.conversations.splice(deleteIndex, 1);\n  }\n  sendMsgToFirebase(message: string) {\n    const date = new Date();\n    this.messageService.sendMessage(\n      this.userInfo.uid,\n      date,\n      this.selectedChatRoomID,\n      message\n    );\n  }\n\n  sendMessage(message: string) {\n    if (this.message !== '') {\n      this.sendMsgToFirebase(message);\n      this.message = '';\n      const objDiv = document.getElementById('content');\n      objDiv.scrollTop = objDiv.scrollHeight;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            forum\n          \n          \n            \n              forum\n              {{ conversation.display_name }}\n              delete\n             -->\n            \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          {{ friend.name }}\n        \n      \n    \n  \n  \n    \n      Select a conversation from the left to start chatting\n    \n  \n  \n    \n      \n        forum\n        {{ selectedConversation.members[0].name }}\n      \n      \n          account_circle\n          {{(selectedConversation.members | keys).length}} Members -->\n    \n\n    \n    \n      \n        \n        {{ event.text }}\n        \n          {{ selectedConversation.members[event.from].name }} -->\n          has joined the conversation\n        \n      \n      {{\n        message\n      }}\n    \n\n    \n      \n      \n        \n        send\n        \n          send -->\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./chatbox.component.scss\n                \n                .container {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 60px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n\n.mat-drawer.mat-drawer-side {\n    padding: 0 5px;\n}\n\n.empty-conversation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n}\n\n.conversation-header h2, .conversation-header p {\n    align-items: center;\n    display: flex;\n}\n\n.text-center {\n    text-align: center;\n    width: 100%;\n}\n\n.conversation-history.mat-list {\n    height: calc(100% - 180px);\n    overflow-x: scroll;\n    position: absolute;\n    width: 100%;\n}\n\n.conversation-history.mat-list p {\n    margin: 0;\n}\n\n.empty-conversation h1 {\n    margin: 0;\n}\n\n.conversations .mat-list-item {\n    cursor: pointer;\n}\n\n.mat-card {\n    height: 100%;\n    padding: 0 24px;\n    overflow: scroll;\n}\n.conversation-input {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    background-color: #fafafa;\n}\n\nsection .mat-list .mat-list-avatar{\n    width: 25px;\n    height: 25px;\n}\n\n.mat-list-avatar {\n    margin: 0 5px;\n}\n\n.right {\n    text-align: right;\n}\n\n.full-width {\n    width: 100%;\n}\n\n.full-width .mat-icon {\n    cursor: pointer;\n    color: black;\n}\n\n.input__field {\n    color: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          forum                                              forum              {{ conversation.display_name }}              delete             -->                                                                        {{ friend.name }}                                Select a conversation from the left to start chatting                          forum        {{ selectedConversation.members[0].name }}                      account_circle          {{(selectedConversation.members | keys).length}} Members -->                                  {{ event.text }}                  {{ selectedConversation.members[event.from].name }} -->          has joined the conversation                    {{        message      }}                                    send                  send -->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatboxComponent', 'selector': 'app-chatbox'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chatroom.html":{"url":"interfaces/Chatroom.html","title":"interface - Chatroom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Chatroom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chatroom.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        chats\n                                \n                                \n                                        created_at\n                                \n                                \n                                        members\n                                \n                                \n                                        roomName\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chats\n                                    \n                                \n                                \n                                    \n                                        chats:         Chat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Chat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                    \n                                \n                                \n                                    \n                                        members:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomName\n                                    \n                                \n                                \n                                    \n                                        roomName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Chat } from './chat.model';\n\nexport interface Chatroom {\n    uid: string;\n    chats: Chat[];\n    members: string[];\n    roomName: string;\n    created_at: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatroomService.html":{"url":"injectables/ChatroomService.html","title":"injectable - ChatroomService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatroomService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chatroom.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addNewChatroom\n                            \n                            \n                                    Public\n                                getChatHistory\n                            \n                            \n                                    Public\n                                getChatroomList\n                            \n                            \n                                    Public\n                                getUpdates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chatroom.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addNewChatroom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewChatroom(status: string, roomName: string, userList: string[], ownerID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chatroom.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roomName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownerID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChatHistory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChatHistory(roomID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chatroom.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChatroomList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChatroomList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chatroom.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUpdates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdates(chatRoomID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chatroom.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chatRoomID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map, take} from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatroomService {\n\n  constructor(private db: AngularFirestore) { }\n\n  public getChatroomList() {\n    return this.db.collection('chatrooms').snapshotChanges()\n            .pipe(map(actions =>\n              actions.map(obj => {\n                const id = obj.payload.doc.id;\n                const data = obj.payload.doc.data();\n                return {id, ...data};\n              })\n            )\n          );\n  }\n\n  public getChatHistory(roomID: string) {\n    return this.db.collection(`chatrooms/${roomID}/chats`).snapshotChanges()\n            .pipe(take(1))\n            .pipe(map(actions =>\n              actions.map(obj => {\n                const id = obj.payload.doc.id;\n                const data = obj.payload.doc.data();\n                return {id, ...data};\n              })\n            )\n          );\n  }\n\n  // status can be public/private\n  public addNewChatroom(status: string, roomName: string, userList: string[], ownerID: string) {\n    this.db\n      .collection(`chatrooms`)\n      .doc(this.db.createId())\n      .set({\n        status,\n        members: userList,\n        ownerID,\n        when: new Date(),\n        roomName\n      })\n      .then((data) => {\n        console.log('new room created!');\n      })\n      .catch(e => {\n        console.log(e);\n      });\n\n  }\n\n  public getUpdates(chatRoomID: string): Observable {\n    return this.db\n      .collection(`chatrooms/${chatRoomID}/chats`)\n      .stateChanges(['added'])\n      .pipe(\n        map(actions => actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        })),\n        map(messages => messages.sort((a: any, b: any) => {\n          return a.when.seconds - b.when.seconds;\n        })));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Chatuser.html":{"url":"interfaces/Chatuser.html","title":"interface - Chatuser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Chatuser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chatuser.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display_name\n                                \n                                \n                                        email\n                                \n                                \n                                        friendList\n                                \n                                \n                                        photoURL\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display_name\n                                    \n                                \n                                \n                                    \n                                        display_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        friendList\n                                    \n                                \n                                \n                                    \n                                        friendList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Chatuser {\n    uid: string;\n    display_name: string;\n    email: string;\n    friendList: string[];\n    photoURL: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      menu\n    \n    \n    \n      \n        \n          account_circle\n        \n        \n          \n            power_settings_new\n          \n          \n              voicemail\n              thing2\n            \n            \n              announcement\n              thing3\n             -->\n        \n        \n        \n          \n          \n        \n       -->\n      \n    \n  \n    \n\n    \n                \n                    ./header.component.scss\n                \n                .button__logout {\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n    align-items: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          menu                                    account_circle                                      power_settings_new                                  voicemail              thing2                                      announcement              thing3             -->                                                           -->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatboxComponent', 'selector': 'app-chatbox'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../app/services/auth.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n\nHowdy, GUEST\nLogin to get started...\n\n\n     Connect Google\n\n\n\n\n\n\n\n\n    Howdy, {{ user.displayName }}\n    \n    UID: {{ user.uid }}\n    Logout\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Howdy, GUESTLogin to get started...     Connect Google    Howdy, {{ user.displayName }}        UID: {{ user.uid }}    Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatboxComponent', 'selector': 'app-chatbox'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/material-module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n\n} from '@angular/material';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatStepperModule,\n        MatMenuModule,\n        MatIconModule\n    ],\n    exports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatStepperModule,\n        MatMenuModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/message.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(userID: string, when: Date, chatRoomID: string, content: string, tone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/message.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    when\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    chatRoomID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    tone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'angry'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private db: AngularFirestore) { }\n\n  public sendMessage(\n    userID: string, when: Date, chatRoomID: string,\n    content: string, tone: string = 'angry'): void {\n    console.log(`Sending message for userID: ${userID}, when: ${when},\n                chatRoomID: ${chatRoomID}, content: ${content}, emotion: ${tone}`);\n    this.db\n      .collection(`chatrooms/${chatRoomID}/chats`)\n      .doc(this.db.createId())\n      .set({\n        content,\n        emotion: tone,\n        tone_id: tone,\n        user: userID,\n        when\n      })\n      .then((data) => {\n        console.log('Message successfully sent!');\n      });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        chatrooms\n                                \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        friendList\n                                \n                                \n                                            Optional\n                                        myCustomData\n                                \n                                \n                                            Optional\n                                        photoURL\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chatrooms\n                                    \n                                \n                                \n                                    \n                                        chatrooms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        friendList\n                                    \n                                \n                                \n                                    \n                                        friendList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myCustomData\n                                    \n                                \n                                \n                                    \n                                        myCustomData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    uid: string;\n    email: string;\n    photoURL?: string;\n    displayName?: string;\n    myCustomData?: string;\n    friendList: string[];\n    chatrooms: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserInfoService.html":{"url":"injectables/UserInfoService.html","title":"injectable - UserInfoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserInfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-info.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrentUserInfo\n                            \n                            \n                                    Public\n                                getUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-info.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentUserInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUserInfo(userID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-info.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user-info.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserInfoService {\n\n  constructor(private db: AngularFirestore) { }\n\n  // will return an observable object\n  // use subscribe to achieve data\n  public getUserList() {\n    return this.db.collection('users').snapshotChanges()\n            .pipe(map(actions =>\n              actions.map(obj => {\n                const id = obj.payload.doc.id;\n                const data = obj.payload.doc.data();\n                return {id, ...data};\n              })\n            )\n          );\n  }\n\n  // use respond.payload.data() to achieve metadata\n  // and respond.payload.id to achieve id\n  public getCurrentUserInfo(userID: string) {\n    return this.db.doc(`users/${userID}`).snapshotChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/chatbox/chatbox.component.ts\n            \n            component\n            ChatboxComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/chat.model.ts\n            \n            interface\n            Chat\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/chatroom.model.ts\n            \n            interface\n            Chatroom\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/chatuser.model.ts\n            \n            interface\n            Chatuser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/chatroom.service.ts\n            \n            injectable\n            ChatroomService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/user-info.service.ts\n            \n            injectable\n            UserInfoService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.3\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ~8.0.1\n        \n            @angular/compiler : ~8.0.1\n        \n            @angular/core : ~8.0.1\n        \n            @angular/fire : ^5.2.1\n        \n            @angular/forms : ~8.0.1\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ~8.0.1\n        \n            @angular/platform-browser-dynamic : ~8.0.1\n        \n            @angular/router : ~8.0.1\n        \n            @types/jquery : ^3.3.31\n        \n            express : ^4.17.1\n        \n            firebase : ^7.3.0\n        \n            hammerjs : ^2.0.8\n        \n            moment : ^2.24.0\n        \n            rxjs : ~6.4.0\n        \n            socket.io-client : ^2.3.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nChittyChat\nOpen the chitty-chat website and chat to each other with an emoji analysis!\nThis project was generated with Angular CLI version 8.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatboxComponent\n\nChatboxComponent\n\nAppModule -->\n\nChatboxComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nChatService\n\nChatService\n\nAppModule -->\n\nChatService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        1 Route\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiKey: 'AIzaSyD-9drCjUDfcRit3vaqTkY_8PVZCOsfiiA',\n  authDomain: 'chitty-chat-ba34b.firebaseapp.com',\n  databaseURL: 'https://chitty-chat-ba34b.firebaseio.com',\n  projectId: 'chitty-chat-ba34b',\n  storageBucket: 'chitty-chat-ba34b.appspot.com',\n  messagingSenderId: '1092864489290',\n  appId: '1:1092864489290:web:1aaf648231980c30e3f3b3'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyD-9drCjUDfcRit3vaqTkY_8PVZCOsfiiA',\n    authDomain: 'chitty-chat-ba34b.firebaseapp.com',\n    databaseURL: 'https://chitty-chat-ba34b.firebaseio.com',\n    projectId: 'chitty-chat-ba34b',\n    storageBucket: 'chitty-chat-ba34b.appspot.com',\n    messagingSenderId: '1092864489290',\n    appId: '1:1092864489290:web:1aaf648231980c30e3f3b3'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
